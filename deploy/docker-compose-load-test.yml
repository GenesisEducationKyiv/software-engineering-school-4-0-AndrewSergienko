services:
  api:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - ../conf/.env.rateservice
    depends_on:
      - postgres
    command: bash -c "goose -dir internal/infrastructure/database/migrations postgres \"host=${DB_HOST} user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB}\" up && /goapp"

  influxdb:
    image: influxdb:1.8
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    volumes:
      - influxdb-data:/var/lib/influxdb

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - influxdb
    volumes:
      - grafana-data:/var/lib/grafana
      - ../conf/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ../conf/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ../conf/grafana/dashboards:/var/lib/grafana/dashboards

  k6:
    build:
      context: ..
      dockerfile: Dockerfile_k6
    depends_on:
      - web
      - influxdb
    entrypoint: ["k6", "run", "--out", "influxdb=http://influxdb:8086/k6", "/app/test.js"]
    volumes:
      - ../scripts/test.js:/app/test.js

  postgres:
    image: postgres
    env_file:
      - ../conf/.env.rateservice
    ports:
      - '5432:5432'
    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 3s
      retries: 5

volumes:
  influxdb-data:
  grafana-data:
